Basic Overview of Challenge: 

You have been asked to develop a process to analyze sets of images of signage to extract and translate any text in the images. This extracted text information will be used to help classify the images as part of a machine learning project that will use this image dataset for model training and evaluation. The images all contain text, but the text may be in any language. The images are stored in a Cloud Storage bucket that has been provided for you.

You must use a Python script to process each of the image files by sending them to the Google Vision API to identify the text in the image. The text from each image must be saved back to files on Cloud Storage, with a separate file for the text from each image. If the text locale is not language (locale='locale'), you must then send the text to the Google Translate API to get the language translation for the original text. Once all of the images have been processed, the script must upload the results to a BigQuery table.
The processed text data must then be written out to a pre-existing BigQuery table called image_text_detail in a dataset in your project called image_classification_dataset.

A colleague on your team had started to work on the code to process the images based on a Python script previously used to process a set of text files using the Natural Language API. Your colleague has been moved to a separate project and you must now complete the task.

Most of the work on the script has been completed and the version you have been given will access a storage bucket, and iterate over every image file it finds. However the specific API calls that need to be made to find the text in each image and then send that text to the Translation API have not yet been implemented.

You have been given a copy of the work in progress Python script and a set of sample images in a Cloud Storage bucket that is named after your lab Project ID.

Your colleague identified the unfinished parts of the script and commented on the API calls that need to be made. There are three unfinished parts in the script that you must complete to make the correct Machine Learning API calls. All of them are preceded with a comment using the label # TBD:.

The final line of code uploads the result data to BigQuery. In the script, this line is disabled by a comment character. When you are satisfied that the rest of the script is working, remove the comment character to enable the final line.

Before you work on the script, you must prepare your environment by creating a service account with the correct permissions and download the credential file for that account. Once you have the service account credentials, you can modify the Python script and use it to process the image files.

To complete the challenge, the original extracted text, locale, and translated text data for all of the images must be loaded into the BigQuery table called image_text_detail. The code to do this is in the script but you must remove the comment characters to enable the line of code at the end of the script.

Once you have successfully processed the image files using the updated Python script and uploaded to data to BigQuery, you must confirm that image data has been successfully processed by running the following Query in BigQuery:

SELECT locale,COUNT(locale) as lcount FROM image_classification_dataset.image_text_detail GROUP BY locale ORDER BY lcount DESC
Copied!
This query will report the number of signs of each language type it has found in the set of sample images.

............That was the whole challenge, next we had to do Tasks which are: 
Task 1. Configure a service account to access the Machine Learning APIs, BigQuery, and Cloud Storage
Create a new service account that provides credentials for the script.
Once you have created the account, bind the BigQuery Role and Cloud Storage Role roles to the Service Account to provide the IAM permissions required to process files from Cloud Storage and insert the result data into a BigQuery table.

  
Task 2. Create and download a credential file for your service account
When you have configured the service account permissions, download the JSON format IAM credentials file for the service account.
Don't forget to configure the environment variable that supplies the name of the credential file for the Python script.  

Task 3. Modify the Python script to extract text from image files
Copy the file analyze-images-v2.py from the Cloud Storage bucket that was created for you into the Cloud Shell.
You must modify this Python script to extract text from the image files stored in your project bucket and then save the text data for each file into a text file that is written back to the same bucket. Remember, the parts of the script where you need to add in the code to access the APIs are marked with the comment # TBD.
After you modify the first part of the script to use the Cloud Vision API to extract text data from the image files, you should run the partially completed script to check your progress to make sure you are on the right track.

Task 4. Modify the Python script to translate the text using the Translation API
Now modify the second part of the Python script to identify any language text data found by the Vision API and use the Translation API to translate the original text into language.

Task 5. Identify the most common language used in the signs in the dataset
After you update the script to successfully find and translate the text in the images, remove the comment character from the line at the end of the script that uploads the data to BigQuery.
When the data has been uploaded to BigQuery, confirm that all necessary data has been loaded into BigQuery by running a query that counts the number of times it sees each separate language.
